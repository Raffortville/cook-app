{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raffihaycan/cook-app/src/Components/Progression/TableProgression.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchProgressions, progresssionsSelector } from '../../Store/modules/progressionStore';\nimport { ficheSelector } from '../../Store/modules/ficheStore';\nimport { Tooltip, Icon } from '@material-ui/core';\nimport '../Table/module.Table.scss';\nimport { iconActionsChild, iconActionsParent } from '../../Constants';\nimport { sortArrayByIndex } from '../../Utils';\n\nconst TableProgression = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentFiche = useSelector(ficheSelector);\n  const progressions = useSelector(progresssionsSelector);\n  let copyArr = [...progressions];\n  sortArrayByIndex(copyArr, \"numero\");\n  useEffect(() => {\n    dispatch(fetchProgressions(currentFiche.ficheId));\n  }, [dispatch, currentFiche]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"ingredient\",\n          children: [\"Etapes de r\\xE9alisation\", /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"ajouter titre\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              onClick: () => props.handleOpenFormTitre({}, \"ajouter\", \"progression\", \"titre de l'étape\"),\n              className: \"icon\",\n              style: {\n                marginLeft: \"5px\"\n              },\n              children: \"add_circle_outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), copyArr.map((etap, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: iconActionsParent.map((icon, index) => /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: icon.action === \"ajouter\" ? `${icon.action} une étape` : `${icon.action} titre de l'étape`,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              onClick: () => props.handleOpenForm(etap, icon.action, \"progression\", \"l'étape\", etap.progressTitreId),\n              style: {\n                paddingTop: \"10px\"\n              },\n              className: icon.class,\n              children: icon.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"titre\",\n          children: etap.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), etap.subArray.length > 0 && etap.subArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: iconActionsChild.map((icon, index) => /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `${icon.action} l'étape`,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              onClick: () => props.handleOpenForm(item, icon.action, \"progression\", \"l'étape\", etap.progressTitreId),\n              style: {\n                paddingTop: \"10px\"\n              },\n              className: icon.class,\n              children: icon.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), item.nom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableProgression, \"8JQTEy9KJZmdn+Gzf732z93i3WA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TableProgression;\nexport default TableProgression;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableProgression\");","map":{"version":3,"sources":["/Users/raffihaycan/cook-app/src/Components/Progression/TableProgression.js"],"names":["React","useEffect","useSelector","useDispatch","fetchProgressions","progresssionsSelector","ficheSelector","Tooltip","Icon","iconActionsChild","iconActionsParent","sortArrayByIndex","TableProgression","props","dispatch","currentFiche","progressions","copyArr","ficheId","handleOpenFormTitre","marginLeft","map","etap","index","icon","action","handleOpenForm","progressTitreId","paddingTop","class","nom","subArray","length","item"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport {fetchProgressions,progresssionsSelector} from '../../Store/modules/progressionStore'\nimport {ficheSelector} from '../../Store/modules/ficheStore'\nimport {Tooltip,Icon} from '@material-ui/core'\nimport '../Table/module.Table.scss'\nimport {iconActionsChild,iconActionsParent} from '../../Constants'\nimport {sortArrayByIndex} from '../../Utils'\nconst TableProgression = (props) => {\n\n    const dispatch = useDispatch()\n\n    const currentFiche = useSelector(ficheSelector)\n\n    const progressions = useSelector(progresssionsSelector)\n\n    let copyArr = [...progressions];\n\n    sortArrayByIndex(copyArr,\"numero\")\n\n    useEffect(() => {\n\n        dispatch(fetchProgressions(currentFiche.ficheId))\n\n    },[dispatch,currentFiche])\n\n\n    return(\n        <table>\n            <thead>\n                <tr>    \n                    <th className=\"ingredient\">Etapes de réalisation\n                        <Tooltip title=\"ajouter titre\">\n                            <Icon onClick={()=>props.handleOpenFormTitre({},\"ajouter\",\"progression\",\"titre de l'étape\")} className=\"icon\" style={{marginLeft:\"5px\"}}>add_circle_outline</Icon>\n                        </Tooltip>\n                    </th>\n                </tr>\n            </thead>\n            { copyArr.map((etap,index) =>\n            \n                <tbody key={index}>\n                    <tr>\n                        <td>\n                        {iconActionsParent.map((icon,index)=>\n                            <Tooltip key={index} title={ icon.action ===\"ajouter\" ? `${icon.action} une étape` :`${icon.action} titre de l'étape` }>\n                                <Icon onClick={()=>props.handleOpenForm(etap,icon.action,\"progression\",\"l'étape\",etap.progressTitreId)} style={ {paddingTop:\"10px\"}} className={icon.class}>{icon.icon}</Icon>\n                            </Tooltip>)}\n                        </td> \n                        <td className=\"titre\">{etap.nom}</td>\n                    </tr>\n                    {etap.subArray.length > 0 &&\n\n                        etap.subArray.map((item,index) =>\n                        \n                        <tr key={index}>\n                            <td>\n                            {iconActionsChild.map((icon,index)=>\n                                <Tooltip key={index} title={ `${icon.action} l'étape` }>\n                                    <Icon onClick={()=>props.handleOpenForm(item,icon.action,\"progression\",\"l'étape\",etap.progressTitreId)} style={ {paddingTop:\"10px\"}} className={icon.class}>{icon.icon}</Icon>\n                                </Tooltip>)}\n                            </td> \n                            <td><span>-</span>{item.nom}</td>\n                        </tr>\n                        )\n                    }\n                </tbody>\n            )}\n        </table>\n    )\n}\n\n\nexport default TableProgression"]},"metadata":{},"sourceType":"module"}