{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { auth, db, providerGg, providerFb, storage } from '../../Firebase';\nimport { setLoading } from './alertStore';\nimport { setFichesSearch, getFiches } from './ficheStore';\nexport const initialState = {\n  user: {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    avatar: \"\"\n  },\n  userLog: false\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    setUser: (state, {\n      payload\n    }) => {\n      state.user = payload;\n    },\n    setUserLog: (state, {\n      payload\n    }) => {\n      state.userLog = payload;\n    }\n  }\n});\nexport const createUser = payload => async dispatch => {\n  dispatch(setLoading(true));\n\n  try {\n    const {\n      user\n    } = await auth.createUserWithEmailAndPassword(payload.email, payload.password);\n    await db.collection('users').doc(user.uid).set({\n      username: payload.username,\n      email: payload.email,\n      emailContact: payload.email,\n      uid: user.uid,\n      avatar: \"\"\n    });\n    dispatch(getUser(user.uid));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logUser = payload => async dispatch => {\n  dispatch(setLoading(true));\n\n  try {\n    const {\n      user\n    } = await auth.signInWithEmailAndPassword(payload.email, payload.password);\n    dispatch(getUser(user.uid));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logUserWthProvider = provider => async dispatch => {\n  const providerAuth = provider === \"Fb\" ? providerFb : providerGg;\n  dispatch(setLoading(true));\n\n  try {\n    const result = await auth.signInWithPopup(providerAuth);\n    await db.collection('users').doc(result.user.uid).set({\n      uid: result.user.uid,\n      username: result.user.displayName,\n      email: result.user.email,\n      emailContact: result.user.email,\n      avatar: \"\"\n    });\n    dispatch(getUser(result.user.uid));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUser = payload => async dispatch => {\n  try {\n    const user = await db.collection('users').doc(payload).get();\n    dispatch(setUser(user.data()));\n    dispatch(setUserLog(true));\n    dispatch(setLoading(false));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const patchUserProfil = (payload, avatar) => async dispatch => {\n  dispatch(setLoading(true));\n\n  try {\n    await db.collection('users').doc(payload.uid).update({\n      username: payload.username,\n      emailContact: payload.emailContact\n    });\n    avatar === \"\" ? dispatch(getUser(payload.uid)) : dispatch(addAvatarProfil(payload.uid, avatar));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addAvatarProfil = (uid, avatar) => async dispatch => {\n  try {\n    await storage.ref('avatar/' + uid).putString(avatar, \"data_url\");\n    const avatarUrl = await storage.ref('avatar/' + uid).getDownloadURL();\n    await db.collection('users').doc(uid).update({\n      avatar: avatarUrl\n    });\n    dispatch(getUser(uid));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logOut = () => async dispatch => {\n  try {\n    await auth.signOut();\n    dispatch(setUser(initialState.user));\n    dispatch(setUserLog(false));\n    dispatch(getFiches([]));\n    dispatch(setFichesSearch([]));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const {\n  setUser,\n  setUserLog\n} = userSlice.actions;\nexport const userSelector = state => state.userStore.user;\nexport const userLogSelector = state => state.userStore.userLog;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/raffihaycan/cook-app/src/Store/modules/userStore.js"],"names":["createSlice","auth","db","providerGg","providerFb","storage","setLoading","setFichesSearch","getFiches","initialState","user","username","email","password","avatar","userLog","userSlice","name","reducers","setUser","state","payload","setUserLog","createUser","dispatch","createUserWithEmailAndPassword","collection","doc","uid","set","emailContact","getUser","error","console","log","logUser","signInWithEmailAndPassword","logUserWthProvider","provider","providerAuth","result","signInWithPopup","displayName","get","data","patchUserProfil","update","addAvatarProfil","ref","putString","avatarUrl","getDownloadURL","logOut","signOut","actions","userSelector","userStore","userLogSelector","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport {auth, db,providerGg,providerFb,storage} from '../../Firebase'\nimport {setLoading} from './alertStore'\nimport {setFichesSearch,getFiches} from './ficheStore'\n\nexport const initialState = { user : {username:\"\",email:\"\",password:\"\", avatar:\"\"}, userLog:false};\n\n\nconst userSlice = createSlice({\n\n    name:\"user\",\n\n    initialState:initialState,\n\n    reducers: {\n\n        setUser:(state,{payload}) => {state.user = payload},\n\n        setUserLog:(state,{payload}) => {state.userLog = payload},\n    }\n});\n\n\nexport const createUser = (payload) => async dispatch => {\n\n    dispatch(setLoading(true))\n    \n    try {\n\n        const {user} =  await auth.createUserWithEmailAndPassword(payload.email,payload.password);\n\n        await db.collection('users').doc(user.uid).set({\n\n            username:payload.username,     \n            email:payload.email,\n            emailContact:payload.email,\n            uid:user.uid,\n            avatar:\"\"\n        })\n\n        dispatch(getUser(user.uid))\n\n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const logUser = (payload) => async dispatch => {\n\n    dispatch(setLoading(true))\n\n    try {\n\n       const {user} = await auth.signInWithEmailAndPassword(payload.email,payload.password);\n\n       dispatch(getUser(user.uid))\n\n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const logUserWthProvider = (provider) => async dispatch  => {\n\n   const providerAuth = provider === \"Fb\" ? providerFb : providerGg;\n\n   dispatch(setLoading(true))\n\n    try {   \n\n        const result =  await auth.signInWithPopup(providerAuth)\n\n        await db.collection('users').doc(result.user.uid).set({\n\n            uid:result.user.uid,\n            username:result.user.displayName,\n            email:result.user.email,\n            emailContact:result.user.email,\n            avatar:\"\"\n        })\n\n        dispatch(getUser(result.user.uid))\n\n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const getUser = (payload) => async dispatch => {\n\n    try {\n\n        const user = await db.collection('users').doc(payload).get()\n\n        dispatch(setUser(user.data()))\n        dispatch(setUserLog(true))\n        dispatch(setLoading(false))\n        \n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const patchUserProfil = (payload,avatar) => async dispatch => {\n\n    dispatch(setLoading(true))\n\n    try {\n\n        await db.collection('users').doc(payload.uid).update({\n\n            username:payload.username,\n            emailContact:payload.emailContact\n        })\n        \n        avatar === \"\" ? dispatch(getUser(payload.uid)) : dispatch(addAvatarProfil(payload.uid,avatar))\n\n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const addAvatarProfil = (uid,avatar) => async dispatch => {\n\n    try {\n\n        await storage.ref('avatar/' + uid).putString(avatar,\"data_url\")\n\n        const avatarUrl = await storage.ref('avatar/' + uid).getDownloadURL();\n\n        await db.collection('users').doc(uid).update({avatar:avatarUrl})\n\n        dispatch(getUser(uid))\n        \n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const logOut = () => async dispatch => {\n\n    try {\n\n       await auth.signOut();\n\n       dispatch(setUser(initialState.user))\n       dispatch(setUserLog(false))\n       dispatch(getFiches([]))\n       dispatch(setFichesSearch([]))\n        \n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const {setUser,setUserLog} = userSlice.actions;\n\nexport const userSelector = (state) => state.userStore.user;\nexport const userLogSelector = (state) => state.userStore.userLog;\n\n\nexport default userSlice.reducer\n"]},"metadata":{},"sourceType":"module"}