{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { db, storage } from '../../Firebase';\nimport { setLoading } from './alertStore';\nexport const initialState = {\n  fiche: {\n    nom: \"\",\n    categorie: \"\",\n    cuisson: \"\",\n    description: \"\",\n    image: \"\"\n  },\n  fiches: [],\n  fichesSearch: []\n};\nconst ficheSlice = createSlice({\n  name: 'Fiche',\n  initialState,\n  reducers: {\n    selectFiche: (state, {\n      payload\n    }) => {\n      state.fiche = payload;\n    },\n    addFiche: (state, {\n      payload\n    }) => {\n      state.fiches = [...state.fiches, payload];\n    },\n    getFiches: (state, {\n      payload\n    }) => {\n      state.fiches = payload;\n    },\n    updateFiche: (state, {\n      payload\n    }) => {\n      state.fiches = state.fiches.map(fiche => fiche.ficheId === payload.ficheId ? payload : fiche);\n    },\n    setFichesSearch: (state, {\n      payload\n    }) => {\n      state.fichesSearch = payload;\n    }\n  }\n});\nexport const createFiche = (payload, img, uid) => async dispatch => {\n  try {\n    const fiche = await db.collection('fiches').add({\n      nom: payload.nom,\n      categorie: payload.categorie,\n      cuisson: payload.cuisson,\n      description: payload.description,\n      userId: uid\n    });\n    await db.collection('fiches').doc(fiche.id).update({\n      ficheId: fiche.id\n    });\n    img !== undefined ? dispatch(storageFicheImg(fiche.id, img, uid)) : dispatch(storageDefaultImg(payload, fiche.id, uid));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const storageFicheImg = (id, img, uid) => async dispatch => {\n  try {\n    await storage.ref('/fiches/' + id).putString(img, 'data_url');\n    const imageUrl = await storage.ref('/fiches/' + id).getDownloadURL();\n    await db.collection('fiches').doc(id).update({\n      image: imageUrl\n    });\n    dispatch(fetchFiches(uid));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const storageDefaultImg = (payload, id, uid) => async dispatch => {\n  try {\n    const imageUrl = await storage.ref().child('/categories/' + payload.categorie + '.jpg').getDownloadURL();\n    await db.collection('fiches').doc(id).update({\n      image: imageUrl\n    });\n    dispatch(fetchFiches(uid));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const patchFiche = (payload, img) => async dispatch => {\n  try {\n    await db.collection('fiches').doc(payload.ficheId).update({\n      nom: payload.nom,\n      categorie: payload.categorie,\n      cuisson: payload.cuisson,\n      description: payload.description\n    });\n    const ficheUpdated = await db.collection('fiches').doc(payload.ficheId).get();\n    img !== ficheUpdated.data().image ? dispatch(storageFicheImg(payload.ficheId, img, payload.userId)) : dispatch(updateFiche(ficheUpdated.data()));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchFiches = uid => async dispatch => {\n  dispatch(setLoading(true));\n  let arr = [];\n\n  try {\n    const fiches = await db.collection('fiches').where(\"userId\", \"==\", uid).get();\n\n    if (fiches.empty) {\n      console.log('no fiches');\n    } else {\n      fiches.forEach(fiche => {\n        arr.push(fiche.data());\n      });\n      dispatch(getFiches(arr));\n      dispatch(setFichesSearch(arr));\n    }\n\n    dispatch(setLoading(false));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const selectFicheById = payload => async dispatch => {\n  try {\n    const fiche = await db.collection('fiches').doc(payload).get();\n    dispatch(selectFiche(fiche.data()));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const {\n  selectFiche,\n  addFiche,\n  getFiches,\n  updateFiche,\n  setFichesSearch,\n  selectFichesSearch\n} = ficheSlice.actions;\nexport const ficheSelector = state => state.ficheStore.fiche;\nexport const fichesSelector = state => state.ficheStore.fiches;\nexport const fichesSearchSelector = state => state.ficheStore.fichesSearch;\nexport default ficheSlice.reducer;","map":{"version":3,"sources":["/Users/raffihaycan/cook-app/src/Store/modules/ficheStore.js"],"names":["createSlice","db","storage","setLoading","initialState","fiche","nom","categorie","cuisson","description","image","fiches","fichesSearch","ficheSlice","name","reducers","selectFiche","state","payload","addFiche","getFiches","updateFiche","map","ficheId","setFichesSearch","createFiche","img","uid","dispatch","collection","add","userId","doc","id","update","undefined","storageFicheImg","storageDefaultImg","error","console","log","ref","putString","imageUrl","getDownloadURL","fetchFiches","child","patchFiche","ficheUpdated","get","data","arr","where","empty","forEach","push","selectFicheById","selectFichesSearch","actions","ficheSelector","ficheStore","fichesSelector","fichesSearchSelector","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport {db,storage} from '../../Firebase'\nimport {setLoading} from './alertStore'\n\nexport const initialState = {\n\n    fiche : { nom:\"\",categorie:\"\",cuisson:\"\", description:\"\",image:\"\"},\n\n    fiches : [],\n\n    fichesSearch : [],\n}\n\nconst ficheSlice = createSlice({\n\n    name:'Fiche',\n\n    initialState,\n\n    reducers : {\n\n        selectFiche: (state,{payload}) => { state.fiche = payload},\n\n        addFiche:(state,{payload}) => {state.fiches = [...state.fiches,payload]},\n\n        getFiches:(state,{payload}) => {state.fiches = payload},\n\n        updateFiche:(state,{payload}) => {state.fiches = state.fiches.map(fiche => fiche.ficheId === payload.ficheId ? payload : fiche)},\n\n        setFichesSearch:(state,{payload}) => {state.fichesSearch = payload},\n\n    }\n})\n\n\nexport const createFiche = (payload,img,uid) => async dispatch => {\n\n    try {\n\n        const fiche = await db.collection('fiches').add({\n\n            nom:payload.nom,\n            categorie:payload.categorie,\n            cuisson:payload.cuisson,\n            description:payload.description,\n            userId:uid\n        })\n\n        await db.collection('fiches').doc(fiche.id).update({ficheId : fiche.id})\n\n        img !== undefined ? dispatch(storageFicheImg(fiche.id,img,uid)) : dispatch(storageDefaultImg(payload,fiche.id,uid));\n        \n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const storageFicheImg = (id,img,uid) => async dispatch => {\n\n    try {\n\n       await storage.ref('/fiches/' + id).putString(img,'data_url')\n        \n       const imageUrl = await storage.ref('/fiches/' + id).getDownloadURL()\n\n       await db.collection('fiches').doc(id).update({image:imageUrl})\n\n       dispatch(fetchFiches(uid))\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n\nexport const storageDefaultImg = (payload,id,uid) => async dispatch => {\n\n    try {\n\n        const imageUrl = await storage.ref().child('/categories/' + payload.categorie+'.jpg').getDownloadURL()\n\n        await db.collection('fiches').doc(id).update({image:imageUrl})\n\n        dispatch(fetchFiches(uid))\n        \n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const patchFiche = (payload,img) => async dispatch => {\n\n    try {\n\n        await db.collection('fiches').doc(payload.ficheId).update({nom:payload.nom,categorie:payload.categorie,cuisson:payload.cuisson,description:payload.description})\n        \n        const ficheUpdated = await db.collection('fiches').doc(payload.ficheId).get();\n\n        img !== ficheUpdated.data().image ? dispatch(storageFicheImg(payload.ficheId,img,payload.userId)) : dispatch(updateFiche(ficheUpdated.data()))\n\n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\n\nexport const fetchFiches = (uid) => async dispatch => {\n\n    dispatch(setLoading(true))\n\n    let arr = [];\n\n    try {\n\n        const fiches = await db.collection('fiches').where(\"userId\",\"==\",uid).get()\n\n        if(fiches.empty){\n\n            console.log('no fiches')\n\n        } else {\n\n            fiches.forEach(fiche => {\n\n                arr.push(fiche.data())\n            })\n\n            dispatch(getFiches(arr))\n            dispatch(setFichesSearch(arr))\n        }\n\n        dispatch(setLoading(false))\n        \n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\nexport const selectFicheById = (payload) => async dispatch => {\n\n    try {\n\n        const fiche = await db.collection('fiches').doc(payload).get()\n\n        dispatch(selectFiche(fiche.data()))\n        \n    } catch (error) {\n        \n        console.log(error)\n    }\n}\n\n\n\nexport const {selectFiche,addFiche,getFiches,updateFiche,setFichesSearch,selectFichesSearch} = ficheSlice.actions;\n\nexport const ficheSelector = (state) => state.ficheStore.fiche;\nexport const fichesSelector = (state) => state.ficheStore.fiches;\nexport const fichesSearchSelector = (state) => state.ficheStore.fichesSearch;\n\nexport default ficheSlice.reducer\n"]},"metadata":{},"sourceType":"module"}