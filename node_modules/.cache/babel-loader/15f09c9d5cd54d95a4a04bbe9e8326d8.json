{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raffihaycan/cook-app/src/Components/header/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fichesSelector, setFichesSearch } from '../../Store/modules/ficheStore';\nimport { searchBySelector } from '../../Store/modules/searchStore';\nimport { addAlert } from '../../Store/modules/alertStore';\nimport TextField from '@material-ui/core/TextField';\nimport { categories, cuissons } from '../../Constants';\nimport SelectInput from '../Buttons/SelectInput';\nimport '../header/module.topHeader.scss';\nimport { capitalize } from '../../Utils';\n\nconst SearchBar = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    nom: \"\",\n    categorie: \"\",\n    cuisson: \"\"\n  });\n  const fiches = useSelector(fichesSelector);\n  const searchBy = useSelector(searchBySelector);\n  let copyArr = [...fiches];\n\n  const handleOnChange = e => {\n    if (fiches.length === 0) {\n      dispatch(addAlert({\n        message: \"Veuillez créer une fiche !\",\n        class: \"warning\"\n      }));\n    }\n\n    let arr = [];\n    const {\n      value,\n      name\n    } = e.target;\n    setState({ ...state,\n      [name]: capitalize(value)\n    });\n    arr = copyArr.filter(fiche => fiche[name].includes(capitalize(value)));\n    dispatch(setFichesSearch(arr));\n  };\n\n  const RenderSearchInput = () => {\n    if (searchBy.cuisson) {\n      return /*#__PURE__*/_jsxDEV(SelectInput, {\n        array: cuissons,\n        handleOnChange: handleOnChange,\n        name: \"cuisson\",\n        state: state.cuisson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this);\n    } else if (searchBy.categorie) {\n      return /*#__PURE__*/_jsxDEV(SelectInput, {\n        array: categories,\n        handleOnChange: handleOnChange,\n        name: \"categorie\",\n        state: state.categorie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        label: searchBy.typeSelected,\n        name: \"nom\",\n        value: state.nom,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: RenderSearchInput()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"eCYsIv4h0A8f4a5ssRkewOtL084=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/raffihaycan/cook-app/src/Components/header/SearchBar.js"],"names":["React","useState","useSelector","useDispatch","fichesSelector","setFichesSearch","searchBySelector","addAlert","TextField","categories","cuissons","SelectInput","capitalize","SearchBar","dispatch","state","setState","nom","categorie","cuisson","fiches","searchBy","copyArr","handleOnChange","e","length","message","class","arr","value","name","target","filter","fiche","includes","RenderSearchInput","typeSelected"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport {useSelector,useDispatch} from \"react-redux\"\nimport {fichesSelector,setFichesSearch} from '../../Store/modules/ficheStore'\nimport {searchBySelector} from '../../Store/modules/searchStore'\nimport {addAlert} from '../../Store/modules/alertStore'\nimport TextField from '@material-ui/core/TextField';\nimport {categories,cuissons} from '../../Constants'\nimport SelectInput from '../Buttons/SelectInput'\nimport '../header/module.topHeader.scss'\nimport {capitalize} from '../../Utils'\n\n\nconst SearchBar = () => {\n\n  const dispatch = useDispatch()\n\n  const [state,setState] = useState({nom:\"\",categorie:\"\",cuisson:\"\"})\n\n  const fiches = useSelector(fichesSelector)\n\n  const searchBy = useSelector(searchBySelector)\n\n  let copyArr = [...fiches]\n\n  const handleOnChange = (e) => {\n\n    if(fiches.length === 0){\n\n      dispatch(addAlert({message:\"Veuillez créer une fiche !\", class:\"warning\"}))\n    }\n\n    let arr = []\n\n    const {value,name} = e.target;\n\n    setState({...state,[name]:capitalize(value)})\n\n    arr = copyArr.filter(fiche => fiche[name].includes(capitalize(value)))\n\n    dispatch(setFichesSearch(arr)) \n\n  }\n\n\n  const RenderSearchInput = () => {\n\n    if(searchBy.cuisson){\n\n      return( <SelectInput array={cuissons} handleOnChange={handleOnChange} name={\"cuisson\"} state={state.cuisson}/>)\n\n    } else if(searchBy.categorie) {\n\n      return(<SelectInput array={categories} handleOnChange={handleOnChange} name={\"categorie\"} state={state.categorie}/>)\n\n    } else {\n\n      return(\n      <TextField\n      label={searchBy.typeSelected}\n      name=\"nom\"\n      value={state.nom}\n      onChange={handleOnChange}\n      />\n      )\n    }\n  }\n  \n  return(\n    <div> \n\n      {RenderSearchInput()}\n      \n    </div>\n  )\n}\n\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}