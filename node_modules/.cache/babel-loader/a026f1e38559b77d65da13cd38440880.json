{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  searchMode: false,\n  searchBy: {\n    cuisson: false,\n    categorie: false,\n    nom: true,\n    typeSelected: \"Nom de la fiche\"\n  }\n};\nconst searchSlice = createSlice({\n  name: \"search\",\n  initialState,\n  reducers: {\n    setSearchMode: (state, {\n      payload\n    }) => {\n      state.searchMode = payload;\n    },\n    setSearchBy: (state, {\n      payload\n    }) => {\n      state.searchBy = payload;\n    }\n  }\n});\nexport const selectSearchType = payload => dispatch => {\n  if (payload === \"nom\") {\n    dispatch(setSearchBy(initialState.searchBy));\n  } else if (payload === \"cuisson\") {\n    dispatch(setSearchBy({\n      [payload]: true,\n      nom: false,\n      categorie: false,\n      typeSelected: \"Mode de cuisson\"\n    }));\n  } else {\n    dispatch(setSearchBy({\n      [payload]: true,\n      nom: false,\n      cuisson: false,\n      typeSelected: \"Catégorie\"\n    }));\n  }\n};\nexport const {\n  setSearchBy,\n  setSearchMode\n} = searchSlice.actions;\nexport const searchSelector = state => state.searchStore.searchMode;\nexport const searchBySelector = state => state.searchStore.searchBy;\nexport default searchSlice.reducer;","map":{"version":3,"sources":["/Users/raffihaycan/cook-app/src/Store/modules/searchStore.js"],"names":["createSlice","initialState","searchMode","searchBy","cuisson","categorie","nom","typeSelected","searchSlice","name","reducers","setSearchMode","state","payload","setSearchBy","selectSearchType","dispatch","actions","searchSelector","searchStore","searchBySelector","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAExBC,EAAAA,UAAU,EAAC,KAFa;AAIxBC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,OAAO,EAAC,KAAT;AAAeC,IAAAA,SAAS,EAAC,KAAzB;AAA+BC,IAAAA,GAAG,EAAC,IAAnC;AAAwCC,IAAAA,YAAY,EAAC;AAArD;AAJc,CAArB;AAOP,MAAMC,WAAW,GAAGR,WAAW,CAAC;AAE5BS,EAAAA,IAAI,EAAC,QAFuB;AAI5BR,EAAAA,YAJ4B;AAM5BS,EAAAA,QAAQ,EAAE;AAENC,IAAAA,aAAa,EAAC,CAACC,KAAD,EAAO;AAACC,MAAAA;AAAD,KAAP,KAAqB;AAACD,MAAAA,KAAK,CAACV,UAAN,GAAmBW,OAAnB;AAA2B,KAFzD;AAINC,IAAAA,WAAW,EAAC,CAACF,KAAD,EAAO;AAACC,MAAAA;AAAD,KAAP,KAAqB;AAACD,MAAAA,KAAK,CAACT,QAAN,GAAiBU,OAAjB;AAAyB;AAJrD;AANkB,CAAD,CAA/B;AAcA,OAAO,MAAME,gBAAgB,GAAIF,OAAD,IAAaG,QAAQ,IAAI;AAGrD,MAAGH,OAAO,KAAK,KAAf,EAAqB;AAEjBG,IAAAA,QAAQ,CAACF,WAAW,CAACb,YAAY,CAACE,QAAd,CAAZ,CAAR;AAEH,GAJD,MAIO,IAAGU,OAAO,KAAK,SAAf,EAA0B;AAGhCG,IAAAA,QAAQ,CAACF,WAAW,CAAC;AAAC,OAACD,OAAD,GAAU,IAAX;AAAiBP,MAAAA,GAAG,EAAC,KAArB;AAA2BD,MAAAA,SAAS,EAAC,KAArC;AAA2CE,MAAAA,YAAY,EAAC;AAAxD,KAAD,CAAZ,CAAR;AAGA,GANM,MAMA;AAENS,IAAAA,QAAQ,CAACF,WAAW,CAAC;AAAC,OAACD,OAAD,GAAU,IAAX;AAAgBP,MAAAA,GAAG,EAAC,KAApB;AAA0BF,MAAAA,OAAO,EAAC,KAAlC;AAAwCG,MAAAA,YAAY,EAAC;AAArD,KAAD,CAAZ,CAAR;AAEA;AACJ,CAlBM;AAqBP,OAAO,MAAM;AAACO,EAAAA,WAAD;AAAaH,EAAAA;AAAb,IAA8BH,WAAW,CAACS,OAAhD;AAEP,OAAO,MAAMC,cAAc,GAAIN,KAAD,IAAWA,KAAK,CAACO,WAAN,CAAkBjB,UAApD;AACP,OAAO,MAAMkB,gBAAgB,GAAIR,KAAD,IAAWA,KAAK,CAACO,WAAN,CAAkBhB,QAAtD;AAEP,eAAeK,WAAW,CAACa,OAA3B","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nexport const initialState = { \n    \n    searchMode:false,\n\n    searchBy: {cuisson:false,categorie:false,nom:true,typeSelected:\"Nom de la fiche\"},\n}\n\nconst searchSlice = createSlice({\n\n    name:\"search\",\n\n    initialState,\n\n    reducers: {\n\n        setSearchMode:(state,{payload}) => {state.searchMode = payload},\n\n        setSearchBy:(state,{payload}) => {state.searchBy = payload},\n    }\n});\n\nexport const selectSearchType = (payload) => dispatch => {\n\n  \n    if(payload === \"nom\"){\n\n        dispatch(setSearchBy(initialState.searchBy))\n    \n    } else if(payload === \"cuisson\") {\n\n     \n     dispatch(setSearchBy({[payload]:true ,nom:false,categorie:false,typeSelected:\"Mode de cuisson\"}))\n     \n\n    } else {\n\n     dispatch(setSearchBy({[payload]:true,nom:false,cuisson:false,typeSelected:\"Catégorie\"}))\n     \n    }\n}\n\n\nexport const {setSearchBy,setSearchMode} = searchSlice.actions;\n\nexport const searchSelector = (state) => state.searchStore.searchMode;\nexport const searchBySelector = (state) => state.searchStore.searchBy;\n\nexport default searchSlice.reducer"]},"metadata":{},"sourceType":"module"}