{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/raffihaycan/cook-app/src/Components/Table/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createForm } from '../../Store/modules/formStore';\nimport { initialStateProgress, removeProgression, removeProgressionTitre } from '../../Store/modules/progressionStore';\nimport { ingredientsSelector, fetchIngredients, removeIngredientTitre, removeIngredient, initialState } from '../../Store/modules/ingredientStore';\nimport '../Table/module.Table.scss';\nimport { Tooltip } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport FormTable from '../Table/formTable';\nimport TableTitre from '../Table/TableTitre';\nimport TableProgression from '../Progression/TableProgression';\nimport Loader from '../Alert/Loader';\nimport { iconActionsParent, iconActionsChild } from '../../Constants';\nimport { sortArrayByIndex } from '../../Utils';\nimport { ficheSelector } from '../../Store/modules/ficheStore';\nimport { loadingSelector } from '../../Store/modules/alertStore';\n\nconst Table = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [openForm, setOpenForm] = useState(false);\n  const ingredients = useSelector(ingredientsSelector);\n  const currentFiche = useSelector(ficheSelector);\n  const loading = useSelector(loadingSelector);\n  let copyArr = [...ingredients];\n  sortArrayByIndex(copyArr, \"created\");\n  useEffect(() => {\n    dispatch(fetchIngredients(currentFiche.ficheId));\n  }, [dispatch, currentFiche]);\n\n  const handleOpenFormTitre = (item, action, table, type) => {\n    if (action === \"supprimer\") return handleDelete(item);\n\n    if (action === \"ajouter\") {\n      table !== \"progression\" ? dispatch(createForm({ ...initialState.ingredientTitre,\n        header: `${action} ${type}`,\n        table: table,\n        ficheId: currentFiche.ficheId\n      })) : dispatch(createForm({ ...initialStateProgress.progressTitre,\n        header: `${action} ${type}`,\n        ficheId: currentFiche.ficheId,\n        table: table\n      }));\n    }\n\n    if (action === \"modifier\") {\n      dispatch(createForm({ ...item,\n        header: `${action} ${type}`,\n        table: table\n      }));\n    }\n\n    setOpenForm(true);\n  };\n\n  const handleOpenForm = (item, action, table, type, id) => {\n    if (action === \"supprimer\") return handleDelete(item, table);\n\n    if (action === \"ajouter\") {\n      table !== \"progression\" ? dispatch(createForm({ ...initialState.ingredient,\n        header: `${action} ${type}`,\n        ficheId: currentFiche.ficheId,\n        ingredientTitreId: id,\n        table: table\n      })) : dispatch(createForm({ ...initialStateProgress.progress,\n        header: `${action} ${type}`,\n        table: table,\n        ficheId: currentFiche.ficheId,\n        progressTitreId: id\n      }));\n    }\n\n    if (action === \"modifier\") {\n      dispatch(createForm({ ...item,\n        header: `${action} ${type}`,\n        table: table\n      }));\n    }\n\n    setOpenForm(true);\n  };\n\n  const handleDelete = (item, table) => {\n    if (table !== \"progression\") {\n      !item.titre ? dispatch(removeIngredient(item)) : dispatch(removeIngredientTitre(item));\n    } else {\n      !item.titre ? dispatch(removeProgression(item)) : dispatch(removeProgressionTitre(item));\n    }\n  };\n\n  const closeForm = () => setOpenForm(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TableTitre, {\n        fiche: currentFiche\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapTables\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"ingredient\",\n                children: [\"Ingr\\xE9dients\", /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"ajouter cat\\xE9gorie\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    onClick: () => handleOpenFormTitre({}, \"ajouter\", \"ingrédient\", \"catégorie\"),\n                    className: \"icon\",\n                    style: {\n                      marginLeft: \"5px\"\n                    },\n                    children: \"add_circle_outline\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantit\\xE9s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Prix\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), copyArr.map((item, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: iconActionsParent.map((icon, index) => /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: icon.action === \"ajouter\" ? `${icon.action} ingrédient` : `${icon.action} catégorie`,\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    onClick: () => handleOpenForm(item, icon.action, \"ingrédient\", \"ingrédient\", item.ingredientTitreId),\n                    style: {\n                      paddingTop: \"10px\"\n                    },\n                    className: icon.class,\n                    children: icon.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 53\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"titre ingredient\",\n                children: item.nom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this), item.subArray.length > 0 && item.subArray.map((ingre, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: iconActionsChild.map((icon, index) => /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: `${icon.action} ingrédient`,\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    onClick: () => handleOpenForm(ingre, icon.action, \"ingrédient\", \"ingrédient\", item.ingredientTitreId),\n                    className: icon.class,\n                    children: icon.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 53\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"ingredient\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 72\n                }, this), ingre.nom]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ingre.qte\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ingre.prix\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 41\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableProgression, {\n          handleOpenForm: handleOpenForm,\n          handleOpenFormTitre: handleOpenFormTitre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: openForm && /*#__PURE__*/_jsxDEV(FormTable, {\n            close: closeForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"2HXnPMl40I1kFkaOLXOpp7qx9x8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/raffihaycan/cook-app/src/Components/Table/Table.js"],"names":["React","useState","useEffect","useSelector","useDispatch","createForm","initialStateProgress","removeProgression","removeProgressionTitre","ingredientsSelector","fetchIngredients","removeIngredientTitre","removeIngredient","initialState","Tooltip","Icon","FormTable","TableTitre","TableProgression","Loader","iconActionsParent","iconActionsChild","sortArrayByIndex","ficheSelector","loadingSelector","Table","dispatch","openForm","setOpenForm","ingredients","currentFiche","loading","copyArr","ficheId","handleOpenFormTitre","item","action","table","type","handleDelete","ingredientTitre","header","progressTitre","handleOpenForm","id","ingredient","ingredientTitreId","progress","progressTitreId","titre","closeForm","marginLeft","map","index","icon","paddingTop","class","nom","subArray","length","ingre","qte","prix"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport {createForm} from '../../Store/modules/formStore'\nimport {initialStateProgress,removeProgression,removeProgressionTitre} from '../../Store/modules/progressionStore'\nimport {ingredientsSelector,fetchIngredients,removeIngredientTitre,removeIngredient,initialState} from '../../Store/modules/ingredientStore'\nimport '../Table/module.Table.scss'\nimport {Tooltip} from '@material-ui/core'\nimport Icon from '@material-ui/core/Icon'\nimport FormTable from '../Table/formTable'\nimport TableTitre from '../Table/TableTitre'\nimport TableProgression from '../Progression/TableProgression'\nimport Loader from '../Alert/Loader'\nimport {iconActionsParent,iconActionsChild} from '../../Constants'\nimport {sortArrayByIndex} from '../../Utils'\nimport { ficheSelector } from '../../Store/modules/ficheStore'\nimport {loadingSelector} from '../../Store/modules/alertStore'\n\n\nconst Table = () => {\n\n    const dispatch = useDispatch()\n\n    const [openForm,setOpenForm] = useState(false)\n\n    const ingredients = useSelector(ingredientsSelector)\n\n    const currentFiche = useSelector(ficheSelector)\n\n    const loading = useSelector(loadingSelector)\n\n    let copyArr = [...ingredients]\n\n    sortArrayByIndex(copyArr,\"created\")  \n\n    useEffect(() => {\n\n        dispatch(fetchIngredients(currentFiche.ficheId))\n\n    },[dispatch,currentFiche])\n\n\n    const handleOpenFormTitre = (item,action,table,type) => {\n\n        if(action === \"supprimer\") return handleDelete(item);\n\n        if(action === \"ajouter\"){\n\n            table !== \"progression\" ? dispatch(createForm({...initialState.ingredientTitre,header:`${action} ${type}`,table:table,ficheId:currentFiche.ficheId})) :\n\n            dispatch(createForm({...initialStateProgress.progressTitre,header:`${action} ${type}`,ficheId:currentFiche.ficheId,table:table}))\n        }\n\n        if(action === \"modifier\"){ dispatch(createForm({...item,header: `${action} ${type}`,table:table}))}\n        \n        setOpenForm(true) \n    }\n \n    const handleOpenForm = (item,action,table,type,id) => {\n\n        if(action === \"supprimer\") return handleDelete(item,table);\n\n        if(action === \"ajouter\" ){\n\n            table !== \"progression\" ? dispatch(createForm({...initialState.ingredient, header:`${action} ${type}`,ficheId:currentFiche.ficheId,ingredientTitreId:id,table:table})) :\n            \n            dispatch(createForm({...initialStateProgress.progress,header:`${action} ${type}`,table:table,ficheId:currentFiche.ficheId,progressTitreId:id}));\n        }\n\n        if(action === \"modifier\") { dispatch(createForm({...item,header: `${action} ${type}`,table:table}))}\n       \n       setOpenForm(true)\n    }   \n\n\n    const handleDelete = (item,table) => {\n\n        if(table !== \"progression\" ){\n\n            !item.titre ? dispatch(removeIngredient(item)) : dispatch(removeIngredientTitre(item))\n\n        } else {\n\n            !item.titre ? dispatch(removeProgression(item)) : dispatch(removeProgressionTitre(item))\n        }\n    }\n\n    const closeForm = () => setOpenForm(false)\n    \n    return(\n        <div>\n        { loading ? <Loader/>:\n           \n           <div>\n                <TableTitre fiche={currentFiche}/>\n                <div className=\"wrapTables\">\n                    <table>\n                        <thead> \n                            <tr>\n                                <th>Actions</th>\n                                <th className=\"ingredient\">Ingrédients \n                                    <Tooltip title=\"ajouter catégorie\">\n                                        <Icon onClick={()=>handleOpenFormTitre({},\"ajouter\",\"ingrédient\",\"catégorie\")} className=\"icon\" style={{marginLeft:\"5px\"}}>add_circle_outline</Icon>\n                                    </Tooltip>\n                                </th>\n                                <th>Quantités</th>\n                                <th>Prix</th>\n                            </tr>\n                        </thead>\n                            {copyArr.map((item,index) =>\n                                <tbody key={index}>\n                                    <tr>\n                                        <td>\n                                            {iconActionsParent.map((icon,index)=>\n                                                <Tooltip key={index} title={ icon.action ===\"ajouter\" ? `${icon.action} ingrédient` :`${icon.action} catégorie` }>\n                                                    <Icon onClick={()=>handleOpenForm(item,icon.action,\"ingrédient\",\"ingrédient\",item.ingredientTitreId)} style={ {paddingTop:\"10px\"}} className={icon.class}>{icon.icon}</Icon>\n                                                </Tooltip>)}\n                                        </td> \n                                        <td className=\"titre ingredient\">{item.nom}</td>\n                                    </tr>\n                                    {item.subArray.length > 0 && \n        \n                                        item.subArray.map((ingre,index) => \n        \n                                        <tr key={index}>\n                                            <td>\n                                            {iconActionsChild.map((icon,index)=>\n                                                <Tooltip key={index} title={`${icon.action} ingrédient`}>\n                                                    <Icon onClick={()=>handleOpenForm(ingre,icon.action,\"ingrédient\",\"ingrédient\",item.ingredientTitreId)} className={icon.class}>{icon.icon}</Icon>\n                                                </Tooltip>)}\n                                            </td>\n                                            <td className=\"ingredient\"><span>-</span>{ingre.nom}</td>\n                                            <td >{ingre.qte}</td>\n                                            <td >{ingre.prix}</td>\n                                        </tr>)\n                                    }\n                                </tbody>\n                            )} \n                    </table>\n                    <TableProgression handleOpenForm={handleOpenForm} handleOpenFormTitre={handleOpenFormTitre}/>\n                    <div>\n                    {openForm &&  <FormTable close={closeForm}/>} \n                    </div>\n                </div>\n            </div>\n        }\n        </div>\n    )\n}\n\n\nexport default Table"]},"metadata":{},"sourceType":"module"}